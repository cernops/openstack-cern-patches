--- novaclient/shell.py.orig	2013-02-04 16:44:36.000000000 +0100
+++ novaclient/shell.py	2013-02-04 16:48:13.000000000 +0100
@@ -186,6 +186,13 @@
             help='Accepts 1.1, defaults to env[OS_COMPUTE_API_VERSION].')
         parser.add_argument('--os_compute_api_version',
             help=argparse.SUPPRESS)
+        
+        parser.add_argument('--os-cacert',
+            metavar='<ca-certificate>',
+            default=utils.env('OS_CACERT', default=None),
+            help='Specify a CA bundle file to use in '
+                 'verifying a TLS (https) server certificate. '
+                 'Defaults to env[OS_CACERT]')
 
         parser.add_argument('--insecure',
             default=utils.env('NOVACLIENT_INSECURE', default=False),
@@ -384,7 +391,7 @@
                 os_region_name, os_auth_system, endpoint_type, insecure,
                 service_type, service_name, volume_service_name,
                 username, apikey, projectid, url, region_name,
-                bypass_url, no_cache) = (
+                bypass_url, no_cache, cacert) = (
                         args.os_username, args.os_password,
                         args.os_tenant_name, args.os_auth_url,
                         args.os_region_name, args.os_auth_system,
@@ -392,7 +399,7 @@
                         args.service_name, args.volume_service_name,
                         args.username, args.apikey, args.projectid,
                         args.url, args.region_name,
-                        args.bypass_url, args.no_cache)
+                        args.bypass_url, args.no_cache, args.os_cacert)
 
         if not endpoint_type:
             endpoint_type = DEFAULT_NOVA_ENDPOINT_TYPE
@@ -463,7 +470,8 @@
                 service_name=service_name, auth_system=os_auth_system,
                 volume_service_name=volume_service_name,
                 timings=args.timings, bypass_url=bypass_url,
-                no_cache=no_cache, http_log_debug=options.debug)
+                no_cache=no_cache, http_log_debug=options.debug,
+                cacert=cacert)
 
         try:
             if not utils.isunauthenticated(args.func):
--- novaclient/client.py.orig	2013-02-04 16:40:24.000000000 +0100
+++ novaclient/client.py	2013-02-04 16:51:44.000000000 +0100
@@ -87,9 +87,11 @@
                  endpoint_type='publicURL', service_type=None,
                  service_name=None, volume_service_name=None,
                  timings=False, bypass_url=None, no_cache=False,
-                 http_log_debug=False, auth_system='keystone'):
+                 http_log_debug=False, auth_system='keystone',
+                 cacert=None):
         super(HTTPClient, self).__init__(timeout=timeout,
-                                         proxy_info=_get_proxy_info())
+                                         proxy_info=_get_proxy_info(),
+                                         ca_certs=cacert)
         self.user = user
         self.password = password
         self.projectid = projectid
--- novaclient/v1_1/client.py.orig	2013-02-04 16:43:53.000000000 +0100
+++ novaclient/v1_1/client.py	2013-02-04 16:44:24.000000000 +0100
@@ -53,7 +53,7 @@
                   service_type='compute', service_name=None,
                   volume_service_name=None, timings=False,
                   bypass_url=None, no_cache=False, http_log_debug=False,
-                  auth_system='keystone'):
+                  auth_system='keystone',cacert=None):
         # FIXME(comstud): Rename the api_key argument above when we
         # know it's not being used as keyword argument
         password = api_key
@@ -115,7 +115,8 @@
                                     timings=timings,
                                     bypass_url=bypass_url,
                                     no_cache=no_cache,
-                                    http_log_debug=http_log_debug)
+                                    http_log_debug=http_log_debug,
+                                    cacert=cacert)
 
     def set_management_url(self, url):
         self.client.set_management_url(url)
