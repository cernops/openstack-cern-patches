# With the addition of Keystone, to use an openstack cloud you should
# authenticate against keystone, which returns a **Token** and **Service
# Catalog**.  The catalog contains the endpoint for all services the
# user/tenant has access to - including nova, glance, keystone, swift.
#
# *NOTE*: Using the 2.0 *auth api* does not mean that compute api is 2.0.  We
# will use the 1.1 *compute api*
$env:OS_AUTH_URL="{{ auth_url }}"

# With the addition of Keystone we have standardized on the term **tenant**
# as the entity that owns the resources.
$env:OS_TENANT_ID="{{ tenant_id }}"
$env:OS_TENANT_NAME="{{ tenant_name }}"

# CERN SSL Validation CA Chain
$PSScriptRoot = Split-Path -Parent -Path $MyInvocation.MyCommand.Definition
$env:OS_CACERT = Join-Path $PSScriptRoot "ca.pem"
if (-not $(Test-Path $env:OS_CACERT)) {
    $wc = New-Object System.Net.Webclient
    $wc.DownloadFile('{{ cachain_url }}', $env:OS_CACERT)
}

# In addition to the owning entity (tenant), openstack stores the entity
# performing the action as the **user**.
$env:OS_USERNAME="{{ user.username }}"

# With Keystone you pass the keystone password.
$Password = Read-Host -assecurestring "Please enter your OpenStack password"
$env:OS_PASSWORD = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($Password))
