--- cinderclient/shell.py.orig	2013-02-05 11:23:36.000000000 +0100
+++ cinderclient/shell.py	2013-02-05 13:29:38.000000000 +0100
@@ -163,6 +163,13 @@
         parser.add_argument('--os_volume_api_version',
                             help=argparse.SUPPRESS)
 
+        parser.add_argument('--os-cacert',
+                            metavar='<ca-certificate>',
+                            default=utils.env('OS_CACERT', default=None),
+                            help='Specify a CA bundle file to use in '
+                            'verifying a TLS (https) server certificate. '
+                            'Defaults to env[OS_CACERT]')
+
         parser.add_argument('--insecure',
                             default=utils.env('CINDERCLIENT_INSECURE',
                                               default=False),
@@ -336,14 +343,14 @@
         (os_username, os_password, os_tenant_name, os_auth_url,
          os_region_name, endpoint_type, insecure,
          service_type, service_name, volume_service_name,
-         username, apikey, projectid, url, region_name) = (
+         username, apikey, projectid, url, region_name, cacert) = (
              args.os_username, args.os_password,
              args.os_tenant_name, args.os_auth_url,
              args.os_region_name, args.endpoint_type,
              args.insecure, args.service_type, args.service_name,
              args.volume_service_name, args.username,
              args.apikey, args.projectid,
-             args.url, args.region_name)
+             args.url, args.region_name, args.os_cacert)
 
         if not endpoint_type:
             endpoint_type = DEFAULT_CINDER_ENDPOINT_TYPE
@@ -408,7 +415,8 @@
                                 extensions=self.extensions,
                                 service_type=service_type,
                                 service_name=service_name,
-                                volume_service_name=volume_service_name)
+                                volume_service_name=volume_service_name,
+                                cacert=cacert)
 
         try:
             if not utils.isunauthenticated(args.func):
--- cinderclient/client.py.orig 2013-02-05 11:29:57.000000000 +0100
+++ cinderclient/client.py      2013-02-05 16:17:11.000000000 +0100
@@ -42,8 +42,8 @@
                  timeout=None, tenant_id=None, proxy_tenant_id=None,
                  proxy_token=None, region_name=None,
                  endpoint_type='publicURL', service_type=None,
-                 service_name=None, volume_service_name=None):
-        super(HTTPClient, self).__init__(timeout=timeout)
+                 service_name=None, volume_service_name=None, cacert=None):
+        super(HTTPClient, self).__init__(timeout=timeout,ca_certs=cacert)
         self.user = user
         self.password = password
         self.projectid = projectid
--- cinderclient/v1/client.py.orig	2013-02-05 11:30:38.000000000 +0100
+++ cinderclient/v1/client.py	2013-02-05 11:31:05.000000000 +0100
@@ -29,7 +29,7 @@
                  proxy_tenant_id=None, proxy_token=None, region_name=None,
                  endpoint_type='publicURL', extensions=None,
                  service_type='volume', service_name=None,
-                 volume_service_name=None):
+                 volume_service_name=None,cacert=None):
         # FIXME(comstud): Rename the api_key argument above when we
         # know it's not being used as keyword argument
         password = api_key
@@ -63,7 +63,8 @@
             endpoint_type=endpoint_type,
             service_type=service_type,
             service_name=service_name,
-            volume_service_name=volume_service_name)
+            volume_service_name=volume_service_name,
+            cacert=cacert)
 
     def authenticate(self):
         """
